name: Build, Test, and Deploy to CloudRun
on:
  push:
    branches:
      - master
  pull_request:
    types: [ opened, synchronize, reopened ]

permissions:
  id-token: write
  contents: read

jobs:

#  build:
#    runs-on: ubuntu-latest
#    steps:
#      - name: Checkout Repository
#        uses: actions/checkout@v2
#
#      - name: Set up JDK 21
#        uses: actions/setup-java@v2
#        with:
#          distribution: 'adopt'
#          java-version: '21'
#
#      - name: Build with Maven
#        run: mvn -B clean install -DskipTests
#
#  tests:
#    runs-on: ubuntu-latest
#    needs: [ build ]
#    steps:
#      - name: Checkout Repository
#        uses: actions/checkout@v2
#
#      - name: Set up JDK 21
#        uses: actions/setup-java@v2
#        with:
#          distribution: 'adopt'
#          java-version: '21'
#
#      - name: Run Tests with Maven
#        run: mvn test
#
#  sonarqube-analyze:
#    runs-on: ubuntu-latest
#    needs: [ tests ]
#    steps:
#      - uses: actions/checkout@v2
#        with:
#          fetch-depth: 0
#      - name: Set up JDK 21
#        uses: actions/setup-java@v2
#        with:
#          java-version: 21
#          distribution: 'zulu'
#      - name: Cache SonarCloud packages
#        uses: actions/cache@v3
#        with:
#          path: ~/.sonar/cache
#          key: ${{ runner.os }}-sonar
#          restore-keys: ${{ runner.os }}-sonar
#      - name: Cache Maven packages
#        uses: actions/cache@v3
#        with:
#          path: ~/.m2
#          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
#          restore-keys: ${{ runner.os }}-m2
#      - name: Build and analyze
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
#        run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=denpoo1_Atipera-Intership-Task

#  build_and_deploy_container_to_dockerhub:
#    runs-on: ubuntu-latest
##    needs: [ sonarqube-analyze ]
#    permissions:
#      contents: 'read'
#      id-token: 'write'
#    steps:
#      - name: Checkout Repository
#        uses: actions/checkout@v2
#
#      - name: Set up JDK 21
#        uses: actions/setup-java@v2
#        with:
#          distribution: 'adopt'
#          java-version: '21'
#
#      - name: Set up Docker Buildx
#        uses: docker/setup-buildx-action@v1
#
#      - name: Build Docker image and Push
#        run: |
#          mvn compile jib:build \
#            -Djib.to.image=denpool/intership-service:${{ github.sha }} \
#            -Djib.to.auth.username=${{ secrets.DOCKER_USERNAME }} \
#            -Djib.to.auth.password=${{ secrets.DOCKER_PASSWORD }}
#
#  deploy_container_to_azure_web_app:
#    runs-on: ubuntu-latest
#    needs: [ build_and_deploy_container_to_dockerhub ]
#    environment:
#      name: 'production'
#      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
#    steps:
#      - name: Set up environment variables
#        run: |
#          echo "DATABASE_URL=${{ secrets.DATABASE_URL}}"
#          echo "AUTHORIZATION_TOKEN=${{ secrets.AUTHORIZATION_TOKEN }}"
#
#      - name: Deploy to Azure Web App
#        id: deploy-to-webapp
#        uses: azure/webapps-deploy@v2
#        with:
#          app-name: 'intership-task'
#          slot-name: 'production'
#          publish-profile: ${{ secrets.AZURE_PUBLISH_PROFILE }}
#          images: 'index.docker.io/denpool/intership-service:${{ github.sha }}'


# File: .github/workflows/workflow.yml

  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Azure login
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          enable-AzPSSession: true

      - name: Azure CLI script
        uses: azure/cli@v2
        with:
          azcliversion: latest
          inlineScript: |
            az account show

      - name: Azure PowerShell script
        uses: azure/powershell@v2
        with:
          azPSVersion: "latest"
          inlineScript: |
            Get-AzContext



#  Application (client) ID
#  :
#  3f014156-b00d-42fc-ad47-b3a90a9c729b
#
#  Directory (tenant) ID
#  :
#  ae65f568-0ceb-42c2-9dda-731b9c16e6b4



